C51 COMPILER V9.00   GPRS                                                                  05/25/2016 14:52:43 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE GPRS
OBJECT MODULE PLACED IN .\Objects\GPRS.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE GPRS.c COMPACT ROM(COMPACT) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\GPRS
                    -.lst) OBJECT(.\Objects\GPRS.obj)

line level    source

   1          #include "GPRS.h"
   2          #include<STC12C5A60S2.h>
   3          #include "string.h"
   4          
   5          
   6          #define S2TI            0x02    //串口2发送中断请求标志位 
   7          
   8          #define RST             48
   9          #define AT              49
  10          #define CCID            50
  11          #define CHECK_NET       51
  12          #define STACK           52
  13          #define APN             53
  14          #define INIT_PPP    54
  15          #define CHECK_PPP   55
  16          #define CLOSE           56
  17          #define LINK            57
  18          #define CONNECT         65
  19          #define LINK_FINISH 66    
  20          
  21          #define MAX_LEN         128             //缓存最大长度
  22          
  23          #define TI2                             (S2CON & S2TI)
  24          #define CLR_TI2()               S2CON &= ~S2TI
  25          
  26          uchar   gprs_state;                     //初始化状态标志位
  27          uint8   num;                            //计数
  28          
  29          uchar   xdata   rev_buf[MAX_LEN];       //接收缓存
  30          uchar   xdata   send_buf[MAX_LEN];      //发送缓存
  31          uchar   xdata   ccid[20];                       //存储CCID       
  32          
  33          uchar   retry_count=0;                          //重试次数标记  
  34          
  35          
  36          /*=========延时=====================*/
  37          void    delay(int i)               
  38          {
  39   1              int j,k;
  40   1              for(j=0;j<i;j++)
  41   1                      for(k=0;k<990;k++);
  42   1      }
  43          
  44          //GPRS口发送数据
  45          void    GPRS_TxByte(uchar dat)
  46          {
  47   1              SBUF = dat;             //将接收的数据发送回去
  48   1              while(TI == 0); //检查发送中断标志位
  49   1              TI = 0;                 //令发送中断标志位为0（软件清零）
  50   1      }
  51          
  52          //GPRS口发送一串字符串
  53          void    GPRS_TxString(char *puts)               
  54          {
C51 COMPILER V9.00   GPRS                                                                  05/25/2016 14:52:43 PAGE 2   

  55   1          while(*puts != 0)  
  56   1                      GPRS_TxByte(*puts++);   //遇到停止符0结束
  57   1      }
  58          
  59          //GPS输出口发送数据 用于调试数据
  60          void    GPS_TxByte(uchar c)
  61          {
  62   1              S2BUF = c;
  63   1              while(!TI2);
  64   1              CLR_TI2();
  65   1      }
  66          
  67          //GPS口发送一串字符串
  68          void    GPS_TxString(char *puts)                
  69          {
*** WARNING C259 IN LINE 69 OF GPRS.C: pointer: different mspace
  70   1          while(*puts != 0)  
  71   1                      GPS_TxByte(*puts++);    //遇到停止符0结束
  72   1      }
  73          
  74          //清除接收缓存
  75          void    clear_rev_buf()
  76          {
  77   1              uint8 index=0;
  78   1              num = 0;
  79   1               
  80   1              for(index=0;index<MAX_LEN;index++)
  81   1              {
  82   2                      rev_buf[index]='\0';
  83   2              }       
  84   1      }
  85          
  86          //检查AT指令是否可用 指令AT\r\n
  87          void    gprs_at()
  88          {
  89   1              GPS_TxString("init AT\n");
  90   1              //GPS_TxString("2:gprs_at()\n");
  91   1      
  92   1              //GPS_TxString(rev_buf);
  93   1              //GPS_TxString("\n");
  94   1      
  95   1              if(gprs_state == RST)
  96   1              {       
  97   2                      clear_rev_buf();
  98   2                  retry_count=0;
  99   2                      GPRS_TxString("AT\r\n");
 100   2                      gprs_state=AT;
 101   2                      delay(500);
 102   2              }
 103   1      }
 104          
 105          //检查SIM卡的CCID号     指令AT+CCID\r\n
 106          void    gprs_check_ccid()
 107          {
 108   1              //GPS_TxString("3:gprs_check_ccid()\n");
 109   1              if(gprs_state != AT)
 110   1              {
 111   2                      return;
 112   2              }
 113   1              
 114   1              //GPS_TxString(rev_buf);
 115   1              //GPS_TxString("\n");
C51 COMPILER V9.00   GPRS                                                                  05/25/2016 14:52:43 PAGE 3   

 116   1              
 117   1              if(rev_buf[2] == 'O' && rev_buf[3]=='K')
 118   1              {       
 119   2                      clear_rev_buf();
 120   2                  retry_count=0;
 121   2                      GPRS_TxString("AT+CCID\r\n");
 122   2                      gprs_state=CCID;
 123   2                      delay(500);
 124   2              }
 125   1              else
 126   1              {       
 127   2                      clear_rev_buf();
 128   2                      GPRS_TxString("AT\r\n");
 129   2                      gprs_state=AT;
 130   2                      delay(500);
 131   2                      retry_count++;
 132   2                      if(retry_count == 5)
 133   2                      {
 134   3                        gprs_state = RST ;
 135   3                        retry_count=0;
 136   3                      }
 137   2              }
 138   1      }
 139          
 140          //检查网络状态  指令 AT+CREG?\r\n
 141          void    gprs_check_net()
 142          {
 143   1              uchar index = 0;
 144   1              //GPS_TxString("4:gprs_check_net()\n");
 145   1              if(gprs_state != CCID)
 146   1                      return;
 147   1      
 148   1              //GPS_TxString(rev_buf);
 149   1              //GPS_TxString("\n");
 150   1      
 151   1              if(rev_buf[33] == 'O' && rev_buf[34]=='K')
 152   1              {
 153   2                      //存储CCID号
 154   2                      for(index = 0 ; index < 20 ; index ++)
 155   2                      {
 156   3                              ccid[index] = rev_buf[index + 9];//从第9个开始
 157   3                      }               
 158   2      
 159   2                      clear_rev_buf();
 160   2                      retry_count=0;
 161   2                      gprs_state=CHECK_NET;
 162   2                      GPRS_TxString("AT+CREG?\r\n");            
 163   2                      delay(1000);
 164   2              }
 165   1              else
 166   1              {
 167   2              clear_rev_buf();
 168   2                      gprs_state=APN;
 169   2                      GPRS_TxString("AT+CGDCONT=1,") ;        
 170   2                      GPRS_TxByte('"');
 171   2                      GPRS_TxString("IP");
 172   2                      GPRS_TxByte('"');
 173   2                      GPRS_TxByte(',');
 174   2                      GPRS_TxByte('"');                                        
 175   2                      GPRS_TxString("CMNET" );         
 176   2                      GPRS_TxByte('"');
 177   2                      GPRS_TxString("\r\n" ); 
C51 COMPILER V9.00   GPRS                                                                  05/25/2016 14:52:43 PAGE 4   

 178   2                      delay(1000);
 179   2                      retry_count++;
 180   2                      if(retry_count == 5)
 181   2                      {
 182   3                        gprs_state = RST ;
 183   3                        retry_count=0;
 184   3                      }
 185   2              }
 186   1      
 187   1      }
 188          
 189          //设置为内部协议 指令AT+XISP=0\r\n
 190          void    gprs_stack()
 191          {
 192   1              //GPS_TxString("5:gprs_stack()\n");
 193   1              if(gprs_state != CHECK_NET)
 194   1                      return;
 195   1              
 196   1              //GPS_TxString(rev_buf);
 197   1              //GPS_TxString("\n");
 198   1                              
 199   1              if(rev_buf[16] == 'O' && rev_buf[17]=='K')
 200   1              {
 201   2                  clear_rev_buf();
 202   2                      retry_count=0;
 203   2                      gprs_state=STACK;
 204   2                      GPRS_TxString("AT+XISP=0\r\n");
 205   2                      delay(1000);
 206   2              }
 207   1              else
 208   1              {       
 209   2                      clear_rev_buf();
 210   2                      GPRS_TxString("AT+CCID\r\n");
 211   2                      gprs_state=CCID;
 212   2                      delay(1000);
 213   2                      retry_count++;
 214   2                      if(retry_count == 5)
 215   2                      {
 216   3                        gprs_state = RST ;
 217   3                        retry_count=0;
 218   3                      }
 219   2              }
 220   1      }
 221          
 222          //设置访问节点APN       指令 AT+CGDCONT=1,"IP","CMNET"\r\n
 223          void    gprs_apn()
 224          {
 225   1              //GPS_TxString("6:gprs_apn()\n");
 226   1              if(gprs_state != STACK)
 227   1                      return;
 228   1      
 229   1              //GPS_TxString(rev_buf);
 230   1              //GPS_TxString("\n");
 231   1      
 232   1              if(rev_buf[2] == 'O' && rev_buf[3]=='K')
 233   1              {
 234   2                  clear_rev_buf();
 235   2                      retry_count=0;
 236   2                  gprs_state=APN;
 237   2                      GPRS_TxString("AT+CGDCONT=1,") ;        
 238   2                      GPRS_TxByte('"');
 239   2                      GPRS_TxString("IP");
C51 COMPILER V9.00   GPRS                                                                  05/25/2016 14:52:43 PAGE 5   

 240   2                      GPRS_TxByte('"');
 241   2                      GPRS_TxByte(',');
 242   2                      GPRS_TxByte('"');                                        
 243   2                      GPRS_TxString("CMNET" );         
 244   2                      GPRS_TxByte('"');
 245   2                      GPRS_TxString("\r\n" ); 
 246   2                      delay(1000);
 247   2                              
 248   2              }
 249   1              else
 250   1              {
 251   2              clear_rev_buf();
 252   2                  gprs_state=STACK;
 253   2                      GPRS_TxString("AT+XISP=0\r\n");
 254   2                      delay(1000);
 255   2                      retry_count++;
 256   2                      if(retry_count == 5)
 257   2                      {
 258   3                        gprs_state = RST ;
 259   3                        retry_count=0;
 260   3                      }
 261   2              }
 262   1      }
 263          
 264          
 265          
 266          //初始化PPP连接 指令 AT+XIIC=1\r\n
 267          void    gprs_init_ppp()
 268          {
 269   1              //GPS_TxString("7:gprs_init_ppp()\n");
 270   1              if(gprs_state != APN)
 271   1                      return;
 272   1      
 273   1              //GPS_TxString(rev_buf);
 274   1              //GPS_TxString("\n");   
 275   1      
 276   1              if(rev_buf[2] == 'O' && rev_buf[3]=='K')
 277   1              {               
 278   2                      clear_rev_buf();
 279   2                      retry_count=0;
 280   2                      gprs_state=INIT_PPP;
 281   2                      GPRS_TxString("AT+XIIC=1\r\n");           
 282   2                      delay(1000);
 283   2              }
 284   1              else
 285   1              {
 286   2                      clear_rev_buf();
 287   2                      gprs_state=CHECK_NET;
 288   2                      GPRS_TxString("AT+CREG?\r\n");            
 289   2                      delay(1000);
 290   2                      retry_count++;
 291   2                      if(retry_count == 5)
 292   2                      {
 293   3                        gprs_state = RST ;
 294   3                        retry_count=0;
 295   3                      }
 296   2              }
 297   1      }
 298          
 299          //检查PPP连接状态       指令AT+XIIC?\r\n
 300          void    gprs_check_ppp()
 301          {
C51 COMPILER V9.00   GPRS                                                                  05/25/2016 14:52:43 PAGE 6   

 302   1              //GPS_TxString("8:gprs_check_ppp()\n");
 303   1              if(gprs_state != INIT_PPP)
 304   1                      return;
 305   1      
 306   1              //GPS_TxString(rev_buf);
 307   1              //GPS_TxString("\n");
 308   1      
 309   1              if(rev_buf[2] == 'O' && rev_buf[3]=='K')
 310   1              {  
 311   2                      clear_rev_buf();
 312   2                      retry_count=0;
 313   2                      gprs_state=CHECK_PPP;
 314   2                      GPRS_TxString("AT+XIIC?\r\n");            
 315   2                      delay(1000);
 316   2              }
 317   1              else
 318   1              {       clear_rev_buf();
 319   2                      gprs_state=INIT_PPP;
 320   2                      GPRS_TxString("AT+XIIC=1\r\n");           
 321   2                      delay(1000);
 322   2                      retry_count++;
 323   2                      if(retry_count == 5)
 324   2                      {
 325   3                        gprs_state = RST ;
 326   3                        retry_count=0;
 327   3                      }
 328   2              }
 329   1      
 330   1      }
 331          
 332          //关闭0链路     指令 AT+TCPCLOSE=0\r\n
 333          void    gprs_close_r0()
 334          {
 335   1      //      uchar xx[8] = "g_s:0\n"; 
 336   1      //      xx[4] = gprs_state;
 337   1      //      GPS_TxString(xx);//打印进度     
 338   1      
 339   1      //      GPS_TxString("9:gprs_close_r0()\n");
 340   1              if(gprs_state != CHECK_PPP)
 341   1                      return;
 342   1                      
 343   1      //      GPS_TxString(rev_buf);
 344   1      //      GPS_TxString("\n");
 345   1                               
 346   1              if(rev_buf[12] == '1' )
 347   1              {               
 348   2                      clear_rev_buf();
 349   2                      retry_count=0;
 350   2                      gprs_state=CLOSE;
 351   2                      GPRS_TxString("AT+TCPCLOSE=0\r\n");               
 352   2                      delay(1000);
 353   2              }
 354   1              else
 355   1              {
 356   2                      clear_rev_buf();
 357   2                      gprs_state=CHECK_PPP;
 358   2                      GPRS_TxString("AT+XIIC?\r\n");            
 359   2                      delay(1000);
 360   2                      retry_count++;
 361   2                      if(retry_count == 5)
 362   2                      {
 363   3                        gprs_state = RST ;
C51 COMPILER V9.00   GPRS                                                                  05/25/2016 14:52:43 PAGE 7   

 364   3                        retry_count=0;
 365   3                      }
 366   2              }
 367   1      
 368   1      }
 369          
 370          //建立连接      指令 AT+TCPSETUP=0,120.27.125.31,80\r\n
 371          void    gprs_setup_link()
 372          {
 373   1      //      uchar xx[8] = "g_s:0\n"; 
 374   1      //      xx[4] = gprs_state;
 375   1      //      GPS_TxString(xx);//打印进度     
 376   1      
 377   1      
 378   1      //      GPS_TxString("10:gprs_setup_link()\n");
 379   1              if(gprs_state != CLOSE)
 380   1                      return;
 381   1                      
 382   1      //      GPS_TxString(rev_buf);
 383   1      //      GPS_TxString("\n");
 384   1                               
 385   1      //      if(1)//rev_buf[12] == '1' )
 386   1      //      {               
 387   1                      clear_rev_buf();
 388   1                      gprs_state=LINK;
 389   1                      GPRS_TxString("AT+TCPSETUP=0,120.27.125.31,80\r\n");              
 390   1                      delay(1000);
 391   1      //      }
 392   1      //      else
 393   1      //      {
 394   1      //              clear_rev_buf();
 395   1      //              gprs_state=CHECK_PPP;
 396   1      //              GPRS_TxString("AT+TCPCLOSE=0\r\n");               
 397   1      //              delay(1000);
 398   1      //              retry_count++;
 399   1      //              if(retry_count == 5)
 400   1      //              {
 401   1      //                gprs_state = RST ;
 402   1      //                retry_count=0;
 403   1      //              }
 404   1      //      }
 405   1      
 406   1      }
 407          
 408          //查看链路0状态 指令 AT+IPSTATUS=0\r\n
 409          void    gprs_check_r0()
 410          {
 411   1              uchar i = 0;
 412   1      
 413   1      //      uchar xx[8] = "g_s:0\n"; 
 414   1      //      xx[4] = gprs_state;
 415   1      //      GPS_TxString(xx);//打印进度
 416   1      
 417   1      //      GPS_TxString("11:gprs_check_r0()\n");
 418   1              if(gprs_state != LINK)
 419   1                      return; 
 420   1      
 421   1      //      GPS_TxString(rev_buf);
 422   1      //      GPS_TxString("\n");
 423   1      
 424   1      
 425   1              if(rev_buf[2]=='O' && rev_buf[3]=='K')
C51 COMPILER V9.00   GPRS                                                                  05/25/2016 14:52:43 PAGE 8   

 426   1              {
 427   2                      retry_count=0;
 428   2                      gprs_state=CONNECT;
 429   2                      clear_rev_buf();
 430   2                      GPRS_TxString("AT+IPSTATUS=0\r\n");               
 431   2                      delay(1000);
 432   2              }
 433   1              else
 434   1              {
 435   2                      for(i=0;i<MAX_LEN;i++)     //判断+IPSTATUS:0,CONNECT,TCP,2047
 436   2                      {
 437   3                              if(rev_buf[i]=='\0')
 438   3                              {
 439   4                                      break;
 440   4                              }
 441   3                              if(rev_buf[i]==',' && i < MAX_LEN - 9 && rev_buf[i+1]=='C' && rev_buf[i+7]=='T' && rev_buf[i+8]==',')
 442   3                              {
 443   4                                      clear_rev_buf();
 444   4                                      GPS_TxString("link success\n");
 445   4                                      retry_count=0;
 446   4                                      gprs_state=LINK_FINISH;
 447   4                                      return;
 448   4                              }
 449   3                      }
 450   2                      
 451   2                      clear_rev_buf();
 452   2                      gprs_state=CLOSE;
 453   2                      GPRS_TxString("AT+TCPCLOSE=0\r\n");               
 454   2                      delay(1000);
 455   2                      retry_count++;
 456   2                      if(retry_count == 5)
 457   2                      {
 458   3                              GPRS_TxString("AT+XIIC=0\r\n");           
 459   3                              delay(500);
 460   3                              gprs_state = RST ;
 461   3                              retry_count=0;
 462   3                      }
 463   2              }
 464   1      }
 465          
 466          void    gprs_link_finish()
 467          {
 468   1              uchar i = 0;    
 469   1              
 470   1              uchar xx[8] = "g_s:0\n"; 
 471   1              xx[4] = gprs_state;
 472   1              GPS_TxString(xx);//打印进度
 473   1      //      
 474   1      //      GPS_TxString("12:gprs_link_finish()\n");
 475   1              if(gprs_state != CONNECT)
 476   1                      return; 
 477   1      //
 478   1      //      GPS_TxString(rev_buf);
 479   1      //      GPS_TxString("\n");
 480   1      
 481   1              if(rev_buf[14] == 'O' && rev_buf[15]=='K')
 482   1              {
 483   2                      clear_rev_buf();
 484   2                      GPS_TxString("link success\n");
 485   2                      retry_count=0;
 486   2                      gprs_state=LINK_FINISH;
 487   2              }
C51 COMPILER V9.00   GPRS                                                                  05/25/2016 14:52:43 PAGE 9   

 488   1              else
 489   1              {       
 490   2                      for(i=0;i<MAX_LEN;i++)     //判断+IPSTATUS:0,CONNECT,TCP,2047
 491   2                      {
 492   3                              if(rev_buf[i]=='\0')
 493   3                              {
 494   4                                      break;
 495   4                              }
 496   3                              if(rev_buf[i]==',' && i < MAX_LEN - 9 && rev_buf[i+1]=='C' && rev_buf[i+7]=='T' && rev_buf[i+8]==',')
 497   3                              {
 498   4                                      clear_rev_buf();
 499   4                                      GPS_TxString("link success\n");
 500   4                                      retry_count=0;
 501   4                                      gprs_state=LINK_FINISH;
 502   4                                      return;
 503   4                              }
 504   3                      }
 505   2                      
 506   2                      clear_rev_buf();
 507   2                      GPS_TxString("link failed\n");
 508   2                      gprs_state=LINK;
 509   2                      GPRS_TxString("AT+IPSTATUS=0\r\n");               
 510   2                      delay(1000);
 511   2                      retry_count++;
 512   2                      if(retry_count == 5)
 513   2                      {
 514   3                              GPRS_TxString("AT+XIIC=0\r\n");           
 515   3                              delay(500);
 516   3                              gprs_state=RST ;
 517   3                              retry_count=0;
 518   3                      }
 519   2              }
 520   1              
 521   1      }
 522          
 523          //char a[13] = "1gprs_state=0";
 524          // gprs模块初始化函数
 525          void    gprs_start()
 526          {
 527   1              uchar plusIndex = 0;//记录遇到+号的位置
 528   1              uchar ready = 1;
 529   1              uchar i = 0;
 530   1              
 531   1              GPS_TxString("gprs_start()\n");
 532   1              gprs_state=RST;
 533   1              num = 0;
 534   1              clear_rev_buf();        
 535   1                      
 536   1              //检查是否硬件启动完成，即是否接收到+PBREADY
 537   1              while(!ready){  //一直循环检测
 538   2                      delay(2000);
 539   2                      GPS_TxString("check gsm ready()\n");
 540   2                      //GPS_TxString(rev_buf);
 541   2                      if(rev_buf[0] == '\0')
 542   2                      {
 543   3                              continue;
 544   3                      }
 545   2                      for(i = 0;i < MAX_LEN;i++)
 546   2                      {
 547   3                              //此处仅匹配了+......Y的格式
 548   3                              if(rev_buf[i] == '+')
 549   3                              {
C51 COMPILER V9.00   GPRS                                                                  05/25/2016 14:52:43 PAGE 10  

 550   4                                      plusIndex = i;
 551   4                              }
 552   3                              else if(rev_buf[i] == 'Y' && plusIndex != 0 && i == plusIndex + 7)
 553   3                              {
 554   4                                      ready = 1;
 555   4                                      break;
 556   4                              }
 557   3                              else if(plusIndex != 0 && i >= plusIndex + 7)
 558   3                              {
 559   4                                      plusIndex = 0;
 560   4                                      break;
 561   4                              }
 562   3                      }
 563   2              }
 564   1              
 565   1              //按步骤初始化
 566   1              while(gprs_state != LINK_FINISH)
 567   1              {       
 568   2                      gprs_at() ;
 569   2                      gprs_check_ccid();
 570   2                      gprs_check_net();
 571   2                      gprs_stack();
 572   2                      gprs_apn();
 573   2                      gprs_init_ppp();
 574   2                      gprs_check_ppp();
 575   2                      gprs_close_r0();
 576   2                      gprs_setup_link();
 577   2                      gprs_check_r0();
 578   2                      gprs_link_finish();
 579   2                      
 580   2                      delay(500);
 581   2      //              GPS_TxString("state:");
 582   2      //              GPS_TxByte(gprs_state);
 583   2      //              GPS_TxString("\n\n");
 584   2              }        
 585   1      }
 586          
 587          //解析接收到的数据
 588          //void  GPRS_RECEIVE(uchar revBuf[])    //gprs ---> mcu
 589          //{
 590          //    uchar *p;
 591          //      uint8 len=0;
 592          //      uint8 index=0;
 593          //      if(revBuf[0]=='\0')
 594          //              return;
 595          //
 596          //      p=strstr(revBuf,"TCPRECV");//返回匹配点以后的字符串
 597          //      if(p != NULL)
 598          //      {
 599          //              p=strstr(p,",");//第一个逗号
 600          //              if(p!=NULL)      
 601          //              {
 602          //                      p++;
 603          //                      //两个逗号之间是长度
 604          //                  p=strstr(p,",");
 605          //                      if(p!=NULL)      //第二个逗号
 606          //                      {
 607          //                          p++;
 608          //                  while(*p!= '\0')
 609          //                              GPRS_TxByte(*p++);
 610          //                      }
 611          //
C51 COMPILER V9.00   GPRS                                                                  05/25/2016 14:52:43 PAGE 11  

 612          //              }
 613          //      }
 614          //      else
 615          //      {
 616          //
 617          //      }
 618          //      //clear_rev_buf();
 619          //}
 620          
 621          //发送数据
 622          void    sendData(uchar buf[])
 623          {
 624   1              uint8 index=0,length=0,tmp ; 
 625   1              gprs_state = CHECK_PPP;
 626   1              clear_rev_buf();
 627   1              //关闭链路，重新连接
 628   1              while(gprs_state != LINK_FINISH)
 629   1              {       
 630   2                      clear_rev_buf();
 631   2                      rev_buf[12] = '1';
 632   2                      gprs_close_r0();
 633   2                      gprs_setup_link();
 634   2                      gprs_check_r0();
 635   2                      gprs_link_finish();
 636   2                      
 637   2                      if(gprs_state==RST)
 638   2                      {
 639   3                              gprs_start();
 640   3                      }
 641   2                      //delay(2000); 
 642   2              }       
 643   1      
 644   1              //开始发送
 645   1              //EA = 0;       //中断关闭
 646   1      
 647   1              while(buf[length ] != '\0')
 648   1                  length++;
 649   1              
 650   1              if(length == 0)
 651   1                      return;
 652   1              
 653   1              tmp=length;
 654   1              //send command
 655   1              GPRS_TxString("AT+TCPSEND=0,");
 656   1              if(length >=10)
 657   1              {
 658   2                      uchar shi,ge;
 659   2                      shi= length /10 +'0';
 660   2                      ge= length %10 +'0';
 661   2                      GPRS_TxByte(shi);
 662   2                      GPRS_TxByte(ge);
 663   2              }
 664   1              else
 665   1              {
 666   2                length=length+'0';
 667   2                GPRS_TxByte(length);
 668   2              }
 669   1              GPRS_TxString("\r\n");
 670   1              
 671   1              //while(rev_buf[2]!='>')
 672   1              retry_count = 0;
 673   1              while(rev_buf[2] != '>')
C51 COMPILER V9.00   GPRS                                                                  05/25/2016 14:52:43 PAGE 12  

 674   1              {
 675   2                      GPS_TxString("wait >\n");
 676   2                      delay(50);
 677   2                      retry_count++;
 678   2                      if(retry_count>10)
 679   2                      {
 680   3                              return;
 681   3                      }       
 682   2              }
 683   1              
 684   1              //GPS_TxString(rev_buf);
 685   1              //EA = 0;
 686   1      //      for(index=0;index<tmp;index++)   
 687   1      //      {
 688   1      //              GPRS_TxByte(buf[index]);
 689   1      //      }
 690   1              GPRS_TxString(buf);
 691   1              GPRS_TxString("\r\n\r\n\r\n");
 692   1              //EA = 1;
 693   1              
 694   1              //GPRS_TxString("");
 695   1              //GPS_TxString("SEND FIN\n");
 696   1              //GPS_TxString(rev_buf);
 697   1              
 698   1      }
 699          
 700          
 701          //设置接收数据
 702          void    setRevBuf(uchar b)
 703          {
 704   1              if(num==MAX_LEN-1)
 705   1              {
 706   2                      num = 0;
 707   2                      return;
 708   2              }
 709   1          rev_buf[num++] = b;
 710   1      }
 711          
 712          //获取CCID号
 713          unsigned        char*   getCcid()
 714          {
 715   1              return ccid;
 716   1      }               


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1942    ----
   CONSTANT SIZE    =    270    ----
   XDATA SIZE       =    276    ----
   PDATA SIZE       =      4      30
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
